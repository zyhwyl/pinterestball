 /*
 * jQuery Simple Overlay
 * A jQuery Plugin for creating a simple, customizable overlay. Supports multiple instances,
 * custom callbacks, hide on click, glossy effect, and more.
 *
 * Copyright 2011 Tom McFarlin, http://tommcfarlin.com, @moretom
 * Released under the MIT License
 *
 * http://moreco.de/jquery-simple-overlay
 */
(function($) {
    $.fn.overlay = function(options) {
        var opts = $.extend({}, $.fn.overlay.defaults, options);
        return this.each(function(evt) {
            if (!$(this).hasClass('overlay-trigger')) {
                show(create($(this), opts), opts);
            }
        });
    };
    function create($src, opts) {
        $src.addClass('overlay-trigger');
        var overlay = $('<div></div>').addClass('overlay').css({background: opts.color,opacity: opts.opacity,top: opts.container.toString() === 'body' ? $(opts.container).scrollTop() : $(opts.container).offset().top,left: $(opts.container).offset().left,width: opts.container === 'body' ? '100%' : $(opts.container).width(),height: opts.container === 'body' ? '100%' : $(opts.container).height(),position: 'absolute',zIndex: 1000,display: 'none',overflow: 'hidden'});
        if (opts.glossy) {
            applyGloss(opts, overlay);
        }
        if (opts.closeOnClick) {
            $(overlay).click(function() {
                close(overlay, opts);
                $src.removeClass('overlay-trigger');
            });
        }
        $(opts.container).append(overlay);
        return overlay;
    }
    function show(overlay, opts) {
        switch (opts.effect.toString().toLowerCase()) {
            case 'fade':
                $(overlay).fadeIn('fast', opts.onShow);
                break;
            case 'slide':
                $(overlay).slideDown('fast', opts.onShow);
                break;
            default:
                $(overlay).show(opts.onShow);
                break;
        }
        $(opts.container).css('overflow', 'hidden');
    }
    function close(overlay, opts) {
        switch (opts.effect.toString().toLowerCase()) {
            case 'fade':
                $(overlay).fadeOut('fast', function() {
                    opts.onHide();
                    $(this).remove();
                });
                break;
            case 'slide':
                $(overlay).slideUp('fast', function() {
                    opts.onHide();
                    $(this).remove();
                });
                break;
            default:
                $(overlay).hide();
                if (opts.onHide) {
                    opts.onHide();
                }
                $(overlay).remove();
                break;
        }
        $(opts.container).css('overflow', 'auto');
    }
    function applyGloss(opts, overlay) {
        var gloss = $('<div></div>');
        $(gloss).css({background: '#fff',opacity: 0.2,width: '200%',height: '100%',position: 'absolute',zIndex: 1001,msTransform: 'rotate(45deg)',webkitTransform: 'rotate(45deg)',oTransform: 'rotate(45deg)'});
        if ($.browser.mozilla) {
            $(gloss).css('-moz-transform', 'rotate(45deg');
        }
        $(overlay).append(gloss);
    }
    $.fn.overlay.defaults = {color: '#000',opacity: 0.5,effect: 'none',onShow: null,onHide: null,closeOnClick: false,glossy: false,container: 'body'};
})(jQuery);

/*
 * jQuery Simple Textcut
 * 
 * by zyh
 */
(function($) {
	var left_length=null;
	var font_size=null;
    $.fn.textcut = function(options) {
        var opts = $.extend({},$.fn.textcut.defaults,options);
        return this.each(function(e) {
        	left_length=opts.cutSize;
        	font_size=opts.cutSize;
        	create($(this),opts);
        });
    };
    
    function create($this,opts){
    	$this.addClass(opts.style);
    	$this_parent=$this.parent();
    	if($this_parent.attr("class")=="textarea_wrap"){
    		$this_parent.append("<span class='textarea_left_wrap'>你还可以输入<span class='textarea_left_font'>"+left_length+"</span>字</span>");
    		$this.keydown(function(e){
    			left_length=font_size-parseInt($this.val().length);
    			$(".textarea_left_font").text(left_length);
    			if(left_length<=0){
    				$(".textarea_left_wrap").html('<span style="color:red;">输入字数已满！</span>');
    				$this.val($this.val().slice(0,font_size-1));
    			}else{
    				$(".textarea_left_wrap").html('你还可以输入<span class="textarea_left_font">'+left_length+'</span>字');
    			}
    		});
    		$this.keyup(function(e){
    			left_length=font_size-parseInt($this.val().length);
    			$(".textarea_left_font").text(left_length);
    			if(left_length<=0){
    				$(".textarea_left_wrap").html('<span style="color:red;">输入字数已满！</span>');
    				$this.val($this.val().slice(0,font_size-1));
    			}else{
    				$(".textarea_left_wrap").html('你还可以输入<span class="textarea_left_font">'+left_length+'</span>字');
    			}
    		});
    		$(".textarea_left_wrap").css(opts.leftPosititon);
    	}else{
    		alert("编辑框父节点的class必须是textarea_wrap");
    	}
    }
    
    $.fn.textcut.defaults ={
		style:"textcut_default",
		cutSize:140,
		position:"relative",
		leftPosititon:{}
    };
})(jQuery);

/**
 * 模仿android里面的Toast效果，主要是用于在不打断程序正常执行的情况下显示提示数据
 * @param config
 * @return
 */
var Toast = function(config){
	this.context = config.context==null?$('body'):config.context;//上下文
	this.message = config.message;//显示内容
	this.time = config.time==null?3000:config.time;//持续时间
	this.left = config.left;//距容器左边的距离
	this.top = config.top;//距容器上方的距离
	this.type=config.type||"alert_normal";//toast所属类型 1 普通 2 错误 3 正确 4 警告
	this.init();
}
var msgEntity;
Toast.prototype = {
	//初始化显示的位置内容等
	init : function(){
		$("#toastMessage").remove();
		//设置消息体
		var msgDIV = new Array();
		msgDIV.push('<div id="toastMessage">');
		msgDIV.push('<span class="toast_img '+this.type+'" /></span><span>'+this.message+'</span>');
		msgDIV.push('</div>');
		msgEntity = $(msgDIV.join('')).appendTo(this.context);
		//设置消息样式
		var left = this.left == null ? "42%": this.left;
		var top = this.top == null ? "45%": this.top;
		msgEntity.css({position:'fixed',top:top,'z-index':'99999999',left:left,'background-color':'#333',color:'white','font-size':'16px',padding:'10px',margin:'10px'});
		msgEntity.hide();
	},
	//显示动画
	show :function(handle){
		msgEntity.fadeIn(this.time/2);
		msgEntity.fadeOut(this.time/2,handle);
	}
}